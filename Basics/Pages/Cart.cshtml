@page
@model CartModel
@{
    ViewData["Title"] = "Sepetim";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10">
            <div class="card shadow-sm p-4" style="background-color: #181b1b; border: 1px solid #232323; color: #fff;">
                <h2 class="mb-4 text-center" style="color: #ffb347;">Sepetim</h2>
                @if (Model.CartItems == null || !Model.CartItems.Any())
                {
                    <div class="alert alert-info text-center">
                        <i class="bi bi-info-circle me-2"></i>
                        Sepetinizde ürün bulunmamaktadır.
                        <a href="/product" class="alert-link ms-2">Alışverişe başlamak için tıklayın</a>
                    </div>
                }
                else
                {
                    <div class="row">
                        <div class="col-lg-8">
                            <div class="card shadow-sm mb-4" style="background-color: #232323; border: 1px solid #333; color: #fff;">
                                <div class="card-body">
                                    @foreach (var item in Model.CartItems)
                                    {
                                        <div class="row align-items-center mb-4 pb-4 border-bottom border-secondary">
                                            <div class="col-md-2">
                                                <img src="@item.Product.ImagePath" alt="@item.Product.Name" class="img-fluid rounded" style="background:#fff;">
                                            </div>
                                            <div class="col-md-4">
                                                <h5 class="mb-1" style="color:#ffb347;">@item.Product.Name</h5>
                                                <p class="text-muted mb-0">@item.Product.ListPrice.ToString("C")</p>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="input-group">
                                                    <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@item.Id, -1)">-</button>
                                                    <input type="number" class="form-control text-center" value="@item.Quantity" min="1" id="quantity-@item.Id" readonly>
                                                    <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(@item.Id, 1)">+</button>
                                                </div>
                                            </div>
                                            <div class="col-md-2 text-end">
                                                <p class="mb-0 fw-bold">@((item.Product.ListPrice * item.Quantity).ToString("C"))</p>
                                            </div>
                                            <div class="col-md-1 text-end">
                                                <button class="btn btn-link text-danger" onclick="removeItem(@item.Id)">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="card shadow-sm" style="background-color: #232323; border: 1px solid #333; color: #fff;">
                                <div class="card-body">
                                    <h5 class="card-title mb-4 text-center" style="color:#ffb347;">Sipariş Özeti</h5>
                                    <div class="d-flex justify-content-between mb-3">
                                        <span>Ara Toplam</span>
                                        <span>@Model.TotalPrice.ToString("C")</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-3">
                                        <span>Kargo</span>
                                        <span>Ücretsiz</span>
                                    </div>
                                    <hr style="border-color:#444;">
                                    <div class="d-flex justify-content-between mb-4">
                                        <span class="fw-bold">Toplam</span>
                                        <span class="fw-bold">@Model.TotalPrice.ToString("C")</span>
                                    </div>
                                    <form method="post">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" asp-page-handler="Purchase" class="btn btn-primary w-100 py-2" style="background:#ffb347; color:#181b1b; border:none; font-weight:600; font-size:1.1rem;">Satın Al</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateQuantity(itemId, change) {
            const input = document.getElementById(`quantity-${itemId}`);
            const newValue = parseInt(input.value) + change;
            if (newValue >= 1) {
                input.value = newValue;
                // AJAX ile güncelleme yapılabilir
            }
        }

        function removeItem(itemId) {
            if (confirm('Bu ürünü sepetten kaldırmak istediğinize emin misiniz?')) {
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                fetch(`/Cart?handler=RemoveItem&itemId=${itemId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    }
                })
                .then(response => {
                    if (response.ok) {
                        // Başarılı silme işlemi sonrası sayfayı yenile
                        window.location.reload();
                    } else {
                        alert('Ürün silinirken bir hata oluştu.');
                    }
                })
                .catch(error => {
                    console.error('Hata:', error);
                    alert('Bir hata oluştu.');
                });
            }
        }
    </script>
} 